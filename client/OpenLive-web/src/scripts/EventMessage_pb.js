/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.agora.inputevent.pb.message.ACTION', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.DisplayInfo', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.DownlinkMessage', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.EventHeader', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.KeyboardEvent', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.MotionEvent', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.MouseEvent', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.RspCode', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.SYSTEM', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.ScreenInfoReq', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.ScreenInfoRsp', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.TRACETYPE', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.TouchEvent', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.TraceReq', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.TraceRsp', null, global);
goog.exportSymbol('proto.agora.inputevent.pb.message.UplinkMessage', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.DisplayInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.DisplayInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.DisplayInfo.displayName = 'proto.agora.inputevent.pb.message.DisplayInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.DisplayInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.DisplayInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.DisplayInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayheight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    displaywidth: jspb.Message.getFieldWithDefault(msg, 2, 0),
    orientation: jspb.Message.getFieldWithDefault(msg, 3, 0),
    system: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.DisplayInfo}
 */
proto.agora.inputevent.pb.message.DisplayInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.DisplayInfo;
  return proto.agora.inputevent.pb.message.DisplayInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.DisplayInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.DisplayInfo}
 */
proto.agora.inputevent.pb.message.DisplayInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayheight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplaywidth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrientation(value);
      break;
    case 4:
      var value = /** @type {!proto.agora.inputevent.pb.message.SYSTEM} */ (reader.readEnum());
      msg.setSystem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.DisplayInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.DisplayInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.DisplayInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayheight();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDisplaywidth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSystem();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional int32 displayHeight = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.getDisplayheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.setDisplayheight = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 displayWidth = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.getDisplaywidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.setDisplaywidth = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 orientation = 3;
 * @return {number}
 */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.setOrientation = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional SYSTEM system = 4;
 * @return {!proto.agora.inputevent.pb.message.SYSTEM}
 */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.getSystem = function() {
  return /** @type {!proto.agora.inputevent.pb.message.SYSTEM} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.agora.inputevent.pb.message.SYSTEM} value */
proto.agora.inputevent.pb.message.DisplayInfo.prototype.setSystem = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.TouchEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.TouchEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.TouchEvent.displayName = 'proto.agora.inputevent.pb.message.TouchEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.TouchEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.TouchEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.TouchEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointerindex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pointerid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logicx: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    logicy: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    pressure: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    size: +jspb.Message.getFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.TouchEvent}
 */
proto.agora.inputevent.pb.message.TouchEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.TouchEvent;
  return proto.agora.inputevent.pb.message.TouchEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.TouchEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.TouchEvent}
 */
proto.agora.inputevent.pb.message.TouchEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPointerindex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPointerid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLogicx(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLogicy(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPressure(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.TouchEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.TouchEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.TouchEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointerindex();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPointerid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLogicx();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getLogicy();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getPressure();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional int32 pointerIndex = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.getPointerindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TouchEvent.prototype.setPointerindex = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 pointerId = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.getPointerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TouchEvent.prototype.setPointerid = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional float logicX = 3;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.getLogicx = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TouchEvent.prototype.setLogicx = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float logicY = 4;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.getLogicy = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TouchEvent.prototype.setLogicy = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float pressure = 5;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.getPressure = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TouchEvent.prototype.setPressure = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float size = 6;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TouchEvent.prototype.getSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TouchEvent.prototype.setSize = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.MotionEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agora.inputevent.pb.message.MotionEvent.repeatedFields_, null);
};
goog.inherits(proto.agora.inputevent.pb.message.MotionEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.MotionEvent.displayName = 'proto.agora.inputevent.pb.message.MotionEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agora.inputevent.pb.message.MotionEvent.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.MotionEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.MotionEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.MotionEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    downtime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventtime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    action: jspb.Message.getFieldWithDefault(msg, 4, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.agora.inputevent.pb.message.TouchEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.MotionEvent}
 */
proto.agora.inputevent.pb.message.MotionEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.MotionEvent;
  return proto.agora.inputevent.pb.message.MotionEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.MotionEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.MotionEvent}
 */
proto.agora.inputevent.pb.message.MotionEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDowntime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventtime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {!proto.agora.inputevent.pb.message.ACTION} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 5:
      var value = new proto.agora.inputevent.pb.message.TouchEvent;
      reader.readMessage(value,proto.agora.inputevent.pb.message.TouchEvent.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.MotionEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.MotionEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.MotionEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDowntime();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventtime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.agora.inputevent.pb.message.TouchEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 downTime = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.getDowntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MotionEvent.prototype.setDowntime = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 eventTime = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.getEventtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MotionEvent.prototype.setEventtime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MotionEvent.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional ACTION action = 4;
 * @return {!proto.agora.inputevent.pb.message.ACTION}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.getAction = function() {
  return /** @type {!proto.agora.inputevent.pb.message.ACTION} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.agora.inputevent.pb.message.ACTION} value */
proto.agora.inputevent.pb.message.MotionEvent.prototype.setAction = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated TouchEvent events = 5;
 * @return {!Array<!proto.agora.inputevent.pb.message.TouchEvent>}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.agora.inputevent.pb.message.TouchEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.agora.inputevent.pb.message.TouchEvent, 5));
};


/** @param {!Array<!proto.agora.inputevent.pb.message.TouchEvent>} value */
proto.agora.inputevent.pb.message.MotionEvent.prototype.setEventsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.agora.inputevent.pb.message.TouchEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.agora.inputevent.pb.message.TouchEvent}
 */
proto.agora.inputevent.pb.message.MotionEvent.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.agora.inputevent.pb.message.TouchEvent, opt_index);
};


proto.agora.inputevent.pb.message.MotionEvent.prototype.clearEventsList = function() {
  this.setEventsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.MouseEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.MouseEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.MouseEvent.displayName = 'proto.agora.inputevent.pb.message.MouseEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.MouseEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.MouseEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.MouseEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    downtime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    eventtime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    button0: jspb.Message.getFieldWithDefault(msg, 3, 0),
    button1: jspb.Message.getFieldWithDefault(msg, 4, 0),
    button2: jspb.Message.getFieldWithDefault(msg, 5, 0),
    button3: jspb.Message.getFieldWithDefault(msg, 6, 0),
    button4: jspb.Message.getFieldWithDefault(msg, 7, 0),
    logicx: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    logicy: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    axisdltaz: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.MouseEvent}
 */
proto.agora.inputevent.pb.message.MouseEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.MouseEvent;
  return proto.agora.inputevent.pb.message.MouseEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.MouseEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.MouseEvent}
 */
proto.agora.inputevent.pb.message.MouseEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDowntime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventtime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setButton0(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setButton1(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setButton2(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setButton3(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setButton4(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLogicx(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLogicy(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAxisdltaz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.MouseEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.MouseEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.MouseEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDowntime();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventtime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getButton0();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getButton1();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getButton2();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getButton3();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getButton4();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLogicx();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getLogicy();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getAxisdltaz();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional uint64 downTime = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getDowntime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setDowntime = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 eventTime = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getEventtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setEventtime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 button0 = 3;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getButton0 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setButton0 = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 button1 = 4;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getButton1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setButton1 = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 button2 = 5;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getButton2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setButton2 = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 button3 = 6;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getButton3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setButton3 = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 button4 = 7;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getButton4 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setButton4 = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional float logicX = 8;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getLogicx = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setLogicx = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float logicY = 9;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getLogicy = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setLogicy = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 axisDltaZ = 10;
 * @return {number}
 */
proto.agora.inputevent.pb.message.MouseEvent.prototype.getAxisdltaz = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.MouseEvent.prototype.setAxisdltaz = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.KeyboardEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.agora.inputevent.pb.message.KeyboardEvent.repeatedFields_, null);
};
goog.inherits(proto.agora.inputevent.pb.message.KeyboardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.KeyboardEvent.displayName = 'proto.agora.inputevent.pb.message.KeyboardEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.agora.inputevent.pb.message.KeyboardEvent.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.KeyboardEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.KeyboardEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.KeyboardEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.KeyboardEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.KeyboardEvent}
 */
proto.agora.inputevent.pb.message.KeyboardEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.KeyboardEvent;
  return proto.agora.inputevent.pb.message.KeyboardEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.KeyboardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.KeyboardEvent}
 */
proto.agora.inputevent.pb.message.KeyboardEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<boolean>} */ (reader.readPackedBool());
      msg.setKeysList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.KeyboardEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.KeyboardEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.KeyboardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.KeyboardEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
};


/**
 * repeated bool keys = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {!Array<boolean>}
 */
proto.agora.inputevent.pb.message.KeyboardEvent.prototype.getKeysList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<boolean>} value */
proto.agora.inputevent.pb.message.KeyboardEvent.prototype.setKeysList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!boolean} value
 * @param {number=} opt_index
 */
proto.agora.inputevent.pb.message.KeyboardEvent.prototype.addKeys = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.agora.inputevent.pb.message.KeyboardEvent.prototype.clearKeysList = function() {
  this.setKeysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.RspCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.RspCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.RspCode.displayName = 'proto.agora.inputevent.pb.message.RspCode';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.RspCode.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.RspCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.RspCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.RspCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    errcode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.RspCode}
 */
proto.agora.inputevent.pb.message.RspCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.RspCode;
  return proto.agora.inputevent.pb.message.RspCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.RspCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.RspCode}
 */
proto.agora.inputevent.pb.message.RspCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setErrcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.RspCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.RspCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.RspCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.RspCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrcode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 errcode = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.RspCode.prototype.getErrcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.RspCode.prototype.setErrcode = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.agora.inputevent.pb.message.RspCode.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.agora.inputevent.pb.message.RspCode.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.TraceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.TraceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.TraceReq.displayName = 'proto.agora.inputevent.pb.message.TraceReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.TraceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.TraceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.TraceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.TraceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    tracetype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.TraceReq}
 */
proto.agora.inputevent.pb.message.TraceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.TraceReq;
  return proto.agora.inputevent.pb.message.TraceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.TraceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.TraceReq}
 */
proto.agora.inputevent.pb.message.TraceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agora.inputevent.pb.message.TRACETYPE} */ (reader.readEnum());
      msg.setTracetype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.TraceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.TraceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.TraceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.TraceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTracetype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional TRACETYPE traceType = 1;
 * @return {!proto.agora.inputevent.pb.message.TRACETYPE}
 */
proto.agora.inputevent.pb.message.TraceReq.prototype.getTracetype = function() {
  return /** @type {!proto.agora.inputevent.pb.message.TRACETYPE} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.agora.inputevent.pb.message.TRACETYPE} value */
proto.agora.inputevent.pb.message.TraceReq.prototype.setTracetype = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 timestamp = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TraceReq.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TraceReq.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.TraceRsp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.TraceRsp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.TraceRsp.displayName = 'proto.agora.inputevent.pb.message.TraceRsp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.TraceRsp.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.TraceRsp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.TraceRsp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.TraceRsp.toObject = function(includeInstance, msg) {
  var f, obj = {
    tracetype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    rspcode: (f = msg.getRspcode()) && proto.agora.inputevent.pb.message.RspCode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.TraceRsp}
 */
proto.agora.inputevent.pb.message.TraceRsp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.TraceRsp;
  return proto.agora.inputevent.pb.message.TraceRsp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.TraceRsp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.TraceRsp}
 */
proto.agora.inputevent.pb.message.TraceRsp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.agora.inputevent.pb.message.TRACETYPE} */ (reader.readEnum());
      msg.setTracetype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.agora.inputevent.pb.message.RspCode;
      reader.readMessage(value,proto.agora.inputevent.pb.message.RspCode.deserializeBinaryFromReader);
      msg.setRspcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.TraceRsp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.TraceRsp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.TraceRsp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.TraceRsp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTracetype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRspcode();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agora.inputevent.pb.message.RspCode.serializeBinaryToWriter
    );
  }
};


/**
 * optional TRACETYPE traceType = 1;
 * @return {!proto.agora.inputevent.pb.message.TRACETYPE}
 */
proto.agora.inputevent.pb.message.TraceRsp.prototype.getTracetype = function() {
  return /** @type {!proto.agora.inputevent.pb.message.TRACETYPE} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.agora.inputevent.pb.message.TRACETYPE} value */
proto.agora.inputevent.pb.message.TraceRsp.prototype.setTracetype = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 timestamp = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.TraceRsp.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.TraceRsp.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional RspCode rspCode = 3;
 * @return {?proto.agora.inputevent.pb.message.RspCode}
 */
proto.agora.inputevent.pb.message.TraceRsp.prototype.getRspcode = function() {
  return /** @type{?proto.agora.inputevent.pb.message.RspCode} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.RspCode, 3));
};


/** @param {?proto.agora.inputevent.pb.message.RspCode|undefined} value */
proto.agora.inputevent.pb.message.TraceRsp.prototype.setRspcode = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.agora.inputevent.pb.message.TraceRsp.prototype.clearRspcode = function() {
  this.setRspcode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.TraceRsp.prototype.hasRspcode = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.ScreenInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.ScreenInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.ScreenInfoReq.displayName = 'proto.agora.inputevent.pb.message.ScreenInfoReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.ScreenInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.ScreenInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.ScreenInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.ScreenInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    resolution: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.ScreenInfoReq}
 */
proto.agora.inputevent.pb.message.ScreenInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.ScreenInfoReq;
  return proto.agora.inputevent.pb.message.ScreenInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.ScreenInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.ScreenInfoReq}
 */
proto.agora.inputevent.pb.message.ScreenInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResolution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.ScreenInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.ScreenInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.ScreenInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.ScreenInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResolution();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 resolution = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.ScreenInfoReq.prototype.getResolution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.ScreenInfoReq.prototype.setResolution = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.ScreenInfoRsp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.ScreenInfoRsp.displayName = 'proto.agora.inputevent.pb.message.ScreenInfoRsp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.ScreenInfoRsp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.ScreenInfoRsp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.toObject = function(includeInstance, msg) {
  var f, obj = {
    screenheight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    screenwidth: jspb.Message.getFieldWithDefault(msg, 2, 0),
    orientation: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rspcode: (f = msg.getRspcode()) && proto.agora.inputevent.pb.message.RspCode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.ScreenInfoRsp}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.ScreenInfoRsp;
  return proto.agora.inputevent.pb.message.ScreenInfoRsp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.ScreenInfoRsp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.ScreenInfoRsp}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScreenheight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScreenwidth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrientation(value);
      break;
    case 4:
      var value = new proto.agora.inputevent.pb.message.RspCode;
      reader.readMessage(value,proto.agora.inputevent.pb.message.RspCode.deserializeBinaryFromReader);
      msg.setRspcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.ScreenInfoRsp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.ScreenInfoRsp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScreenheight();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getScreenwidth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOrientation();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRspcode();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.agora.inputevent.pb.message.RspCode.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 screenHeight = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.getScreenheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.setScreenheight = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 screenWidth = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.getScreenwidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.setScreenwidth = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 orientation = 3;
 * @return {number}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.getOrientation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.setOrientation = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional RspCode rspCode = 4;
 * @return {?proto.agora.inputevent.pb.message.RspCode}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.getRspcode = function() {
  return /** @type{?proto.agora.inputevent.pb.message.RspCode} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.RspCode, 4));
};


/** @param {?proto.agora.inputevent.pb.message.RspCode|undefined} value */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.setRspcode = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.clearRspcode = function() {
  this.setRspcode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.ScreenInfoRsp.prototype.hasRspcode = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.EventHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.EventHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.EventHeader.displayName = 'proto.agora.inputevent.pb.message.EventHeader';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.EventHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.EventHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.EventHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.EventHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.EventHeader}
 */
proto.agora.inputevent.pb.message.EventHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.EventHeader;
  return proto.agora.inputevent.pb.message.EventHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.EventHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.EventHeader}
 */
proto.agora.inputevent.pb.message.EventHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.EventHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.EventHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.EventHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.EventHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 version = 1;
 * @return {number}
 */
proto.agora.inputevent.pb.message.EventHeader.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.EventHeader.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 sequence = 2;
 * @return {number}
 */
proto.agora.inputevent.pb.message.EventHeader.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.agora.inputevent.pb.message.EventHeader.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.UplinkMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.UplinkMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.UplinkMessage.displayName = 'proto.agora.inputevent.pb.message.UplinkMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.UplinkMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.UplinkMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.UplinkMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventheader: (f = msg.getEventheader()) && proto.agora.inputevent.pb.message.EventHeader.toObject(includeInstance, f),
    motionevent: (f = msg.getMotionevent()) && proto.agora.inputevent.pb.message.MotionEvent.toObject(includeInstance, f),
    mouseevent: (f = msg.getMouseevent()) && proto.agora.inputevent.pb.message.MouseEvent.toObject(includeInstance, f),
    keyboardevent: (f = msg.getKeyboardevent()) && proto.agora.inputevent.pb.message.KeyboardEvent.toObject(includeInstance, f),
    tracereq: (f = msg.getTracereq()) && proto.agora.inputevent.pb.message.TraceReq.toObject(includeInstance, f),
    screeninforeq: (f = msg.getScreeninforeq()) && proto.agora.inputevent.pb.message.ScreenInfoReq.toObject(includeInstance, f),
    displayinfo: (f = msg.getDisplayinfo()) && proto.agora.inputevent.pb.message.DisplayInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.UplinkMessage}
 */
proto.agora.inputevent.pb.message.UplinkMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.UplinkMessage;
  return proto.agora.inputevent.pb.message.UplinkMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.UplinkMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.UplinkMessage}
 */
proto.agora.inputevent.pb.message.UplinkMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agora.inputevent.pb.message.EventHeader;
      reader.readMessage(value,proto.agora.inputevent.pb.message.EventHeader.deserializeBinaryFromReader);
      msg.setEventheader(value);
      break;
    case 2:
      var value = new proto.agora.inputevent.pb.message.MotionEvent;
      reader.readMessage(value,proto.agora.inputevent.pb.message.MotionEvent.deserializeBinaryFromReader);
      msg.setMotionevent(value);
      break;
    case 3:
      var value = new proto.agora.inputevent.pb.message.MouseEvent;
      reader.readMessage(value,proto.agora.inputevent.pb.message.MouseEvent.deserializeBinaryFromReader);
      msg.setMouseevent(value);
      break;
    case 4:
      var value = new proto.agora.inputevent.pb.message.KeyboardEvent;
      reader.readMessage(value,proto.agora.inputevent.pb.message.KeyboardEvent.deserializeBinaryFromReader);
      msg.setKeyboardevent(value);
      break;
    case 5:
      var value = new proto.agora.inputevent.pb.message.TraceReq;
      reader.readMessage(value,proto.agora.inputevent.pb.message.TraceReq.deserializeBinaryFromReader);
      msg.setTracereq(value);
      break;
    case 6:
      var value = new proto.agora.inputevent.pb.message.ScreenInfoReq;
      reader.readMessage(value,proto.agora.inputevent.pb.message.ScreenInfoReq.deserializeBinaryFromReader);
      msg.setScreeninforeq(value);
      break;
    case 7:
      var value = new proto.agora.inputevent.pb.message.DisplayInfo;
      reader.readMessage(value,proto.agora.inputevent.pb.message.DisplayInfo.deserializeBinaryFromReader);
      msg.setDisplayinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.UplinkMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.UplinkMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.UplinkMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventheader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agora.inputevent.pb.message.EventHeader.serializeBinaryToWriter
    );
  }
  f = message.getMotionevent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.agora.inputevent.pb.message.MotionEvent.serializeBinaryToWriter
    );
  }
  f = message.getMouseevent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agora.inputevent.pb.message.MouseEvent.serializeBinaryToWriter
    );
  }
  f = message.getKeyboardevent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.agora.inputevent.pb.message.KeyboardEvent.serializeBinaryToWriter
    );
  }
  f = message.getTracereq();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.agora.inputevent.pb.message.TraceReq.serializeBinaryToWriter
    );
  }
  f = message.getScreeninforeq();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.agora.inputevent.pb.message.ScreenInfoReq.serializeBinaryToWriter
    );
  }
  f = message.getDisplayinfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.agora.inputevent.pb.message.DisplayInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventHeader eventHeader = 1;
 * @return {?proto.agora.inputevent.pb.message.EventHeader}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.getEventheader = function() {
  return /** @type{?proto.agora.inputevent.pb.message.EventHeader} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.EventHeader, 1));
};


/** @param {?proto.agora.inputevent.pb.message.EventHeader|undefined} value */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.setEventheader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.agora.inputevent.pb.message.UplinkMessage.prototype.clearEventheader = function() {
  this.setEventheader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.hasEventheader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MotionEvent motionEvent = 2;
 * @return {?proto.agora.inputevent.pb.message.MotionEvent}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.getMotionevent = function() {
  return /** @type{?proto.agora.inputevent.pb.message.MotionEvent} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.MotionEvent, 2));
};


/** @param {?proto.agora.inputevent.pb.message.MotionEvent|undefined} value */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.setMotionevent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.agora.inputevent.pb.message.UplinkMessage.prototype.clearMotionevent = function() {
  this.setMotionevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.hasMotionevent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional MouseEvent mouseEvent = 3;
 * @return {?proto.agora.inputevent.pb.message.MouseEvent}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.getMouseevent = function() {
  return /** @type{?proto.agora.inputevent.pb.message.MouseEvent} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.MouseEvent, 3));
};


/** @param {?proto.agora.inputevent.pb.message.MouseEvent|undefined} value */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.setMouseevent = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.agora.inputevent.pb.message.UplinkMessage.prototype.clearMouseevent = function() {
  this.setMouseevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.hasMouseevent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional KeyboardEvent keyboardEvent = 4;
 * @return {?proto.agora.inputevent.pb.message.KeyboardEvent}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.getKeyboardevent = function() {
  return /** @type{?proto.agora.inputevent.pb.message.KeyboardEvent} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.KeyboardEvent, 4));
};


/** @param {?proto.agora.inputevent.pb.message.KeyboardEvent|undefined} value */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.setKeyboardevent = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.agora.inputevent.pb.message.UplinkMessage.prototype.clearKeyboardevent = function() {
  this.setKeyboardevent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.hasKeyboardevent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TraceReq traceReq = 5;
 * @return {?proto.agora.inputevent.pb.message.TraceReq}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.getTracereq = function() {
  return /** @type{?proto.agora.inputevent.pb.message.TraceReq} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.TraceReq, 5));
};


/** @param {?proto.agora.inputevent.pb.message.TraceReq|undefined} value */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.setTracereq = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.agora.inputevent.pb.message.UplinkMessage.prototype.clearTracereq = function() {
  this.setTracereq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.hasTracereq = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ScreenInfoReq screenInfoReq = 6;
 * @return {?proto.agora.inputevent.pb.message.ScreenInfoReq}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.getScreeninforeq = function() {
  return /** @type{?proto.agora.inputevent.pb.message.ScreenInfoReq} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.ScreenInfoReq, 6));
};


/** @param {?proto.agora.inputevent.pb.message.ScreenInfoReq|undefined} value */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.setScreeninforeq = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.agora.inputevent.pb.message.UplinkMessage.prototype.clearScreeninforeq = function() {
  this.setScreeninforeq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.hasScreeninforeq = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DisplayInfo displayInfo = 7;
 * @return {?proto.agora.inputevent.pb.message.DisplayInfo}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.getDisplayinfo = function() {
  return /** @type{?proto.agora.inputevent.pb.message.DisplayInfo} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.DisplayInfo, 7));
};


/** @param {?proto.agora.inputevent.pb.message.DisplayInfo|undefined} value */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.setDisplayinfo = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.agora.inputevent.pb.message.UplinkMessage.prototype.clearDisplayinfo = function() {
  this.setDisplayinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.UplinkMessage.prototype.hasDisplayinfo = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.agora.inputevent.pb.message.DownlinkMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.agora.inputevent.pb.message.DownlinkMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.agora.inputevent.pb.message.DownlinkMessage.displayName = 'proto.agora.inputevent.pb.message.DownlinkMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.agora.inputevent.pb.message.DownlinkMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.agora.inputevent.pb.message.DownlinkMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.DownlinkMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventheader: (f = msg.getEventheader()) && proto.agora.inputevent.pb.message.EventHeader.toObject(includeInstance, f),
    tracersp: (f = msg.getTracersp()) && proto.agora.inputevent.pb.message.TraceRsp.toObject(includeInstance, f),
    screeninforsp: (f = msg.getScreeninforsp()) && proto.agora.inputevent.pb.message.ScreenInfoRsp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.agora.inputevent.pb.message.DownlinkMessage}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.agora.inputevent.pb.message.DownlinkMessage;
  return proto.agora.inputevent.pb.message.DownlinkMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.agora.inputevent.pb.message.DownlinkMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.agora.inputevent.pb.message.DownlinkMessage}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.agora.inputevent.pb.message.EventHeader;
      reader.readMessage(value,proto.agora.inputevent.pb.message.EventHeader.deserializeBinaryFromReader);
      msg.setEventheader(value);
      break;
    case 2:
      var value = new proto.agora.inputevent.pb.message.TraceRsp;
      reader.readMessage(value,proto.agora.inputevent.pb.message.TraceRsp.deserializeBinaryFromReader);
      msg.setTracersp(value);
      break;
    case 3:
      var value = new proto.agora.inputevent.pb.message.ScreenInfoRsp;
      reader.readMessage(value,proto.agora.inputevent.pb.message.ScreenInfoRsp.deserializeBinaryFromReader);
      msg.setScreeninforsp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.agora.inputevent.pb.message.DownlinkMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.agora.inputevent.pb.message.DownlinkMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.agora.inputevent.pb.message.DownlinkMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventheader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.agora.inputevent.pb.message.EventHeader.serializeBinaryToWriter
    );
  }
  f = message.getTracersp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.agora.inputevent.pb.message.TraceRsp.serializeBinaryToWriter
    );
  }
  f = message.getScreeninforsp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.agora.inputevent.pb.message.ScreenInfoRsp.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventHeader eventHeader = 1;
 * @return {?proto.agora.inputevent.pb.message.EventHeader}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.getEventheader = function() {
  return /** @type{?proto.agora.inputevent.pb.message.EventHeader} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.EventHeader, 1));
};


/** @param {?proto.agora.inputevent.pb.message.EventHeader|undefined} value */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.setEventheader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.agora.inputevent.pb.message.DownlinkMessage.prototype.clearEventheader = function() {
  this.setEventheader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.hasEventheader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TraceRsp traceRsp = 2;
 * @return {?proto.agora.inputevent.pb.message.TraceRsp}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.getTracersp = function() {
  return /** @type{?proto.agora.inputevent.pb.message.TraceRsp} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.TraceRsp, 2));
};


/** @param {?proto.agora.inputevent.pb.message.TraceRsp|undefined} value */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.setTracersp = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.agora.inputevent.pb.message.DownlinkMessage.prototype.clearTracersp = function() {
  this.setTracersp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.hasTracersp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ScreenInfoRsp screenInfoRsp = 3;
 * @return {?proto.agora.inputevent.pb.message.ScreenInfoRsp}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.getScreeninforsp = function() {
  return /** @type{?proto.agora.inputevent.pb.message.ScreenInfoRsp} */ (
    jspb.Message.getWrapperField(this, proto.agora.inputevent.pb.message.ScreenInfoRsp, 3));
};


/** @param {?proto.agora.inputevent.pb.message.ScreenInfoRsp|undefined} value */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.setScreeninforsp = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.agora.inputevent.pb.message.DownlinkMessage.prototype.clearScreeninforsp = function() {
  this.setScreeninforsp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.agora.inputevent.pb.message.DownlinkMessage.prototype.hasScreeninforsp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.agora.inputevent.pb.message.SYSTEM = {
  ANDROID: 0,
  IOS: 1,
  WINDOWS: 2
};

/**
 * @enum {number}
 */
proto.agora.inputevent.pb.message.ACTION = {
  ACTION_DOWN: 0,
  ACTION_UP: 1,
  ACTION_MOVE: 2,
  ACTION_CANCEL: 3,
  ACTION_OUTSIDE: 4,
  ACTION_POINTER_DOWN: 5,
  ACTION_POINTER_UP: 6
};

/**
 * @enum {number}
 */
proto.agora.inputevent.pb.message.TRACETYPE = {
  RTT_DELAY: 0
};

goog.object.extend(exports, proto.agora.inputevent.pb.message);
