// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.14'
        classpath 'com.novoda:bintray-release:0.9'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.google.com' }
    }

}

Properties properties = new Properties()
def localProperties = new File(rootProject.getProjectDir().absolutePath + "/local.properties")
if (localProperties.exists()) {
    properties.load(localProperties.newDataInputStream())
}
def buildWithAgoraProjAndroidInner = properties.getProperty('buildWithAgoraProjAndroid') == "true"
// Default abi list
def abiTypes = ["arm", "arm64", "x86"]
// exclude abi, for speed
if (properties.getProperty('abiExcludeArm') == "true") {
    abiTypes.remove("arm")
}
if (properties.getProperty('abiExcludeArm64') == "true") {
    abiTypes.remove("arm64")
}
if (properties.getProperty('abiExcludeX86') == "true") {
    abiTypes.remove("x86")
}

// map different naming
def abiFilterFavorInner = []
abiTypes.each { abi ->
    if (abi == "arm") {
        abiFilterFavorInner.add("armeabi-v7a")
    } else if (abi == "arm64") {
        abiFilterFavorInner.add("arm64-v8a")
    } else {
        abiFilterFavorInner.add("x86")
    }
}

ext {
    // To compile agora-rtc-sdk, add 'buildWithAgoraProjAndroid=true' into `local.properties`
    // Then you can share the same config with `proj.android`
    buildWithAgoraProjAndroid = buildWithAgoraProjAndroidInner
    abiFilterFavor = abiFilterFavorInner
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
